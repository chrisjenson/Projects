ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_Init, %function
  25              	UART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 2


  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC5/UART_1.c **** }
  87:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 3


  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  33              		.loc 1 138 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 4


  34 0000 0E22     		movs	r2, #14
  35 0002 044B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  37              		.loc 1 139 0
  38 0006 8F22     		movs	r2, #143
  39 0008 1033     		adds	r3, r3, #16
  40 000a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  41              		.loc 1 150 0
  42 000c 0222     		movs	r2, #2
  43 000e 4F33     		adds	r3, r3, #79
  44 0010 1A70     		strb	r2, [r3]
  45 0012 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0014 2B650040 		.word	1073767723
  50              		.cfi_endproc
  51              	.LFE1:
  52              		.size	UART_1_Init, .-UART_1_Init
  53              		.section	.text.UART_1_Enable,"ax",%progbits
  54              		.align	2
  55              		.global	UART_1_Enable
  56              		.thumb
  57              		.thumb_func
  58              		.type	UART_1_Enable, %function
  59              	UART_1_Enable:
  60              	.LFB2:
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 5


 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
  61              		.loc 1 184 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  69              		.loc 1 186 0
  70 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  71              	.LVL0:
  72 0006 0446     		mov	r4, r0
  73              	.LVL1:
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  74              		.loc 1 211 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 6


  75 0008 054A     		ldr	r2, .L6
  76 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  77 000c 43F01003 		orr	r3, r3, #16
  78 0010 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  79              		.loc 1 219 0
  80 0012 FFF7FEFF 		bl	UART_1_IntClock_Start
  81              	.LVL2:
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  82              		.loc 1 222 0
  83 0016 2046     		mov	r0, r4
  84 0018 FFF7FEFF 		bl	CyExitCriticalSection
  85              	.LVL3:
  86 001c 10BD     		pop	{r4, pc}
  87              	.LVL4:
  88              	.L7:
  89 001e 00BF     		.align	2
  90              	.L6:
  91 0020 9A650040 		.word	1073767834
  92              		.cfi_endproc
  93              	.LFE2:
  94              		.size	UART_1_Enable, .-UART_1_Enable
  95              		.section	.text.UART_1_Start,"ax",%progbits
  96              		.align	2
  97              		.global	UART_1_Start
  98              		.thumb
  99              		.thumb_func
 100              		.type	UART_1_Start, %function
 101              	UART_1_Start:
 102              	.LFB0:
  77:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 103              		.loc 1 77 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 08B5     		push	{r3, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_1.c ****     {
 111              		.loc 1 79 0
 112 0002 054B     		ldr	r3, .L11
 113 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 114 0006 23B9     		cbnz	r3, .L9
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 115              		.loc 1 81 0
 116 0008 FFF7FEFF 		bl	UART_1_Init
 117              	.LVL5:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 7


  82:Generated_Source\PSoC5/UART_1.c ****     }
 118              		.loc 1 82 0
 119 000c 0122     		movs	r2, #1
 120 000e 024B     		ldr	r3, .L11
 121 0010 1A70     		strb	r2, [r3]
 122              	.L9:
  85:Generated_Source\PSoC5/UART_1.c **** }
 123              		.loc 1 85 0
 124 0012 FFF7FEFF 		bl	UART_1_Enable
 125              	.LVL6:
 126 0016 08BD     		pop	{r3, pc}
 127              	.L12:
 128              		.align	2
 129              	.L11:
 130 0018 00000000 		.word	.LANCHOR0
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	UART_1_Start, .-UART_1_Start
 134              		.section	.text.UART_1_Stop,"ax",%progbits
 135              		.align	2
 136              		.global	UART_1_Stop
 137              		.thumb
 138              		.thumb_func
 139              		.type	UART_1_Stop, %function
 140              	UART_1_Stop:
 141              	.LFB3:
 223:Generated_Source\PSoC5/UART_1.c **** }
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 142              		.loc 1 241 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 150              		.loc 1 243 0
 151 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 8


 152              	.LVL7:
 153 0006 0446     		mov	r4, r0
 154              	.LVL8:
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 155              		.loc 1 257 0
 156 0008 FFF7FEFF 		bl	UART_1_IntClock_Stop
 157              	.LVL9:
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 158              		.loc 1 270 0
 159 000c 044A     		ldr	r2, .L15
 160 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 161 0010 03F0EF03 		and	r3, r3, #239
 162 0014 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 163              		.loc 1 277 0
 164 0016 2046     		mov	r0, r4
 165 0018 FFF7FEFF 		bl	CyExitCriticalSection
 166              	.LVL10:
 167 001c 10BD     		pop	{r4, pc}
 168              	.LVL11:
 169              	.L16:
 170 001e 00BF     		.align	2
 171              	.L15:
 172 0020 9A650040 		.word	1073767834
 173              		.cfi_endproc
 174              	.LFE3:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 9


 175              		.size	UART_1_Stop, .-UART_1_Stop
 176              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 177              		.align	2
 178              		.global	UART_1_ReadControlRegister
 179              		.thumb
 180              		.thumb_func
 181              		.type	UART_1_ReadControlRegister, %function
 182              	UART_1_ReadControlRegister:
 183              	.LFB4:
 278:Generated_Source\PSoC5/UART_1.c **** }
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 184              		.loc 1 296 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 189              		.loc 1 302 0
 190 0000 0020     		movs	r0, #0
 191 0002 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE4:
 194              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 195              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 196              		.align	2
 197              		.global	UART_1_WriteControlRegister
 198              		.thumb
 199              		.thumb_func
 200              		.type	UART_1_WriteControlRegister, %function
 201              	UART_1_WriteControlRegister:
 202              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 10


 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 203              		.loc 1 320 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208              	.LVL12:
 209 0000 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE5:
 212              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 213 0002 00BF     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 214              		.align	2
 215              		.global	UART_1_SetTxInterruptMode
 216              		.thumb
 217              		.thumb_func
 218              		.type	UART_1_SetTxInterruptMode, %function
 219              	UART_1_SetTxInterruptMode:
 220              	.LFB6:
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 11


 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 12


 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 13


 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 14


 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 15


 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 16


 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 17


 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 18


 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 19


 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 20


 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 221              		.loc 1 909 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL13:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 21


 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 227              		.loc 1 910 0
 228 0000 014B     		ldr	r3, .L20
 229 0002 1870     		strb	r0, [r3]
 230 0004 7047     		bx	lr
 231              	.L21:
 232 0006 00BF     		.align	2
 233              	.L20:
 234 0008 8A650040 		.word	1073767818
 235              		.cfi_endproc
 236              	.LFE6:
 237              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 238              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 239              		.align	2
 240              		.global	UART_1_WriteTxData
 241              		.thumb
 242              		.thumb_func
 243              		.type	UART_1_WriteTxData, %function
 244              	UART_1_WriteTxData:
 245              	.LFB7:
 911:Generated_Source\PSoC5/UART_1.c ****     }
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 246              		.loc 1 943 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 22


 250              		@ link register save eliminated.
 251              	.LVL14:
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 252              		.loc 1 945 0
 253 0000 024B     		ldr	r3, .L24
 254 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 255 0004 0BB1     		cbz	r3, .L22
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 256              		.loc 1 976 0
 257 0006 024B     		ldr	r3, .L24+4
 258 0008 1870     		strb	r0, [r3]
 259              	.L22:
 260 000a 7047     		bx	lr
 261              	.L25:
 262              		.align	2
 263              	.L24:
 264 000c 00000000 		.word	.LANCHOR0
 265 0010 4A650040 		.word	1073767754
 266              		.cfi_endproc
 267              	.LFE7:
 268              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 269              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 270              		.align	2
 271              		.global	UART_1_ReadTxStatus
 272              		.thumb
 273              		.thumb_func
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 23


 274              		.type	UART_1_ReadTxStatus, %function
 275              	UART_1_ReadTxStatus:
 276              	.LFB8:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 277              		.loc 1 1004 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 282              		.loc 1 1005 0
 283 0000 014B     		ldr	r3, .L27
 284 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_1.c ****     }
 285              		.loc 1 1006 0
 286 0004 7047     		bx	lr
 287              	.L28:
 288 0006 00BF     		.align	2
 289              	.L27:
 290 0008 6A650040 		.word	1073767786
 291              		.cfi_endproc
 292              	.LFE8:
 293              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 294              		.section	.text.UART_1_PutChar,"ax",%progbits
 295              		.align	2
 296              		.global	UART_1_PutChar
 297              		.thumb
 298              		.thumb_func
 299              		.type	UART_1_PutChar, %function
 300              	UART_1_PutChar:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 24


 301              	.LFB9:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 302              		.loc 1 1042 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307              	.LVL15:
 308              	.L30:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 25


1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 309              		.loc 1 1107 0 discriminator 1
 310 0000 034B     		ldr	r3, .L31
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 0004 13F0040F 		tst	r3, #4
 313 0008 FAD1     		bne	.L30
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 26


1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 314              		.loc 1 1113 0
 315 000a 024B     		ldr	r3, .L31+4
 316 000c 1870     		strb	r0, [r3]
 317 000e 7047     		bx	lr
 318              	.L32:
 319              		.align	2
 320              	.L31:
 321 0010 6A650040 		.word	1073767786
 322 0014 4A650040 		.word	1073767754
 323              		.cfi_endproc
 324              	.LFE9:
 325              		.size	UART_1_PutChar, .-UART_1_PutChar
 326              		.section	.text.UART_1_PutString,"ax",%progbits
 327              		.align	2
 328              		.global	UART_1_PutString
 329              		.thumb
 330              		.thumb_func
 331              		.type	UART_1_PutString, %function
 332              	UART_1_PutString:
 333              	.LFB10:
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 27


1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 334              		.loc 1 1146 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL16:
 339 0000 38B5     		push	{r3, r4, r5, lr}
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 3, -16
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345              	.LVL17:
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 346              		.loc 1 1150 0
 347 0002 074B     		ldr	r3, .L39
 348 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0006 2BB9     		cbnz	r3, .L37
 350 0008 38BD     		pop	{r3, r4, r5, pc}
 351              	.LVL18:
 352              	.L36:
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 353              		.loc 1 1155 0
 354 000a FFF7FEFF 		bl	UART_1_PutChar
 355              	.LVL19:
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 356              		.loc 1 1156 0
 357 000e 0134     		adds	r4, r4, #1
 358              	.LVL20:
 359 0010 A4B2     		uxth	r4, r4
 360              	.LVL21:
 361 0012 01E0     		b	.L34
 362              	.LVL22:
 363              	.L37:
 364 0014 0546     		mov	r5, r0
 365 0016 0024     		movs	r4, #0
 366              	.LVL23:
 367              	.L34:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 368              		.loc 1 1153 0
 369 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 370 001a 0028     		cmp	r0, #0
 371 001c F5D1     		bne	.L36
 372 001e 38BD     		pop	{r3, r4, r5, pc}
 373              	.LVL24:
 374              	.L40:
 375              		.align	2
 376              	.L39:
 377 0020 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 28


 378              		.cfi_endproc
 379              	.LFE10:
 380              		.size	UART_1_PutString, .-UART_1_PutString
 381              		.section	.text.UART_1_PutArray,"ax",%progbits
 382              		.align	2
 383              		.global	UART_1_PutArray
 384              		.thumb
 385              		.thumb_func
 386              		.type	UART_1_PutArray, %function
 387              	UART_1_PutArray:
 388              	.LFB11:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 389              		.loc 1 1193 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL25:
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 29


 394              		.loc 1 1197 0
 395 0000 084B     		ldr	r3, .L47
 396 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397 0004 33B9     		cbnz	r3, .L45
 398 0006 7047     		bx	lr
 399              	.LVL26:
 400              	.L44:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 4, -16
 403              		.cfi_offset 5, -12
 404              		.cfi_offset 6, -8
 405              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 406              		.loc 1 1201 0
 407 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 408 000a FFF7FEFF 		bl	UART_1_PutChar
 409              	.LVL27:
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 410              		.loc 1 1202 0
 411 000e 0134     		adds	r4, r4, #1
 412              	.LVL28:
 413 0010 E4B2     		uxtb	r4, r4
 414              	.LVL29:
 415 0012 03E0     		b	.L42
 416              	.LVL30:
 417              	.L45:
 418              		.cfi_def_cfa_offset 0
 419              		.cfi_restore 4
 420              		.cfi_restore 5
 421              		.cfi_restore 6
 422              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 423              		.loc 1 1193 0
 424 0014 70B5     		push	{r4, r5, r6, lr}
 425              		.cfi_def_cfa_offset 16
 426              		.cfi_offset 4, -16
 427              		.cfi_offset 5, -12
 428              		.cfi_offset 6, -8
 429              		.cfi_offset 14, -4
 430 0016 0D46     		mov	r5, r1
 431 0018 0646     		mov	r6, r0
 432 001a 0024     		movs	r4, #0
 433              	.LVL31:
 434              	.L42:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 435              		.loc 1 1199 0
 436 001c AC42     		cmp	r4, r5
 437 001e F3D3     		bcc	.L44
 438 0020 70BD     		pop	{r4, r5, r6, pc}
 439              	.LVL32:
 440              	.L48:
 441 0022 00BF     		.align	2
 442              	.L47:
 443 0024 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 30


 444              		.cfi_endproc
 445              	.LFE11:
 446              		.size	UART_1_PutArray, .-UART_1_PutArray
 447              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 448              		.align	2
 449              		.global	UART_1_PutCRLF
 450              		.thumb
 451              		.thumb_func
 452              		.type	UART_1_PutCRLF, %function
 453              	UART_1_PutCRLF:
 454              	.LFB12:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 455              		.loc 1 1231 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL33:
 460 0000 08B5     		push	{r3, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 3, -8
 463              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 464              		.loc 1 1233 0
 465 0002 064B     		ldr	r3, .L52
 466 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 0006 3BB1     		cbz	r3, .L49
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 31


 468              		.loc 1 1235 0
 469 0008 FFF7FEFF 		bl	UART_1_PutChar
 470              	.LVL34:
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 471              		.loc 1 1236 0
 472 000c 0D20     		movs	r0, #13
 473 000e FFF7FEFF 		bl	UART_1_PutChar
 474              	.LVL35:
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 475              		.loc 1 1237 0
 476 0012 0A20     		movs	r0, #10
 477 0014 FFF7FEFF 		bl	UART_1_PutChar
 478              	.LVL36:
 479              	.L49:
 480 0018 08BD     		pop	{r3, pc}
 481              	.L53:
 482 001a 00BF     		.align	2
 483              	.L52:
 484 001c 00000000 		.word	.LANCHOR0
 485              		.cfi_endproc
 486              	.LFE12:
 487              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 488              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 489              		.align	2
 490              		.global	UART_1_GetTxBufferSize
 491              		.thumb
 492              		.thumb_func
 493              		.type	UART_1_GetTxBufferSize, %function
 494              	UART_1_GetTxBufferSize:
 495              	.LFB13:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 32


1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 496              		.loc 1 1275 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 501              		.loc 1 1301 0
 502 0000 074B     		ldr	r3, .L58
 503 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 0004 DBB2     		uxtb	r3, r3
 505              	.LVL37:
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 506              		.loc 1 1304 0
 507 0006 13F0040F 		tst	r3, #4
 508 000a 04D1     		bne	.L56
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 33


 509              		.loc 1 1308 0
 510 000c 13F0020F 		tst	r3, #2
 511 0010 03D0     		beq	.L57
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 512              		.loc 1 1310 0
 513 0012 0020     		movs	r0, #0
 514 0014 7047     		bx	lr
 515              	.L56:
1306:Generated_Source\PSoC5/UART_1.c ****         }
 516              		.loc 1 1306 0
 517 0016 0420     		movs	r0, #4
 518 0018 7047     		bx	lr
 519              	.L57:
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 520              		.loc 1 1315 0
 521 001a 0120     		movs	r0, #1
 522              	.LVL38:
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:Generated_Source\PSoC5/UART_1.c ****     }
 523              		.loc 1 1321 0
 524 001c 7047     		bx	lr
 525              	.L59:
 526 001e 00BF     		.align	2
 527              	.L58:
 528 0020 6A650040 		.word	1073767786
 529              		.cfi_endproc
 530              	.LFE13:
 531              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 532              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 533              		.align	2
 534              		.global	UART_1_ClearTxBuffer
 535              		.thumb
 536              		.thumb_func
 537              		.type	UART_1_ClearTxBuffer, %function
 538              	UART_1_ClearTxBuffer:
 539              	.LFB14:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 34


1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 540              		.loc 1 1355 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 548              		.loc 1 1358 0
 549 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 550              	.LVL39:
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 551              		.loc 1 1360 0
 552 0006 064B     		ldr	r3, .L62
 553 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 554 000a 42F00102 		orr	r2, r2, #1
 555 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 556              		.loc 1 1361 0
 557 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 558 0012 02F0FE02 		and	r2, r2, #254
 559 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 560              		.loc 1 1362 0
 561 0018 FFF7FEFF 		bl	CyExitCriticalSection
 562              	.LVL40:
 563 001c 08BD     		pop	{r3, pc}
 564              	.L63:
 565 001e 00BF     		.align	2
 566              	.L62:
 567 0020 9A650040 		.word	1073767834
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 35


 568              		.cfi_endproc
 569              	.LFE14:
 570              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 571              		.section	.text.UART_1_SendBreak,"ax",%progbits
 572              		.align	2
 573              		.global	UART_1_SendBreak
 574              		.thumb
 575              		.thumb_func
 576              		.type	UART_1_SendBreak, %function
 577              	UART_1_SendBreak:
 578              	.LFB15:
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 36


1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 579              		.loc 1 1441 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL41:
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 585              		.loc 1 1444 0
 586 0000 124B     		ldr	r3, .L71
 587 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 0004 0BB3     		cbz	r3, .L64
 589              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 37


1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 590              		.loc 1 1490 0
 591 0006 08B1     		cbz	r0, .L66
 592              		.loc 1 1490 0 is_stmt 0 discriminator 1
 593 0008 0328     		cmp	r0, #3
 594 000a 0DD1     		bne	.L67
 595              	.L66:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 596              		.loc 1 1501 0 is_stmt 1
 597 000c 104B     		ldr	r3, .L71+4
 598 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 599 0010 0E4A     		ldr	r2, .L71
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 38


 600 0012 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 601              		.loc 1 1502 0
 602 0014 CF22     		movs	r2, #207
 603 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 604              		.loc 1 1509 0
 605 0018 0022     		movs	r2, #0
 606 001a 0F33     		adds	r3, r3, #15
 607 001c 1A70     		strb	r2, [r3]
 608              	.L68:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 609              		.loc 1 1513 0 discriminator 1
 610 001e 0D4B     		ldr	r3, .L71+8
 611 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 612              	.LVL42:
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 613              		.loc 1 1515 0 discriminator 1
 614 0022 13F0020F 		tst	r3, #2
 615 0026 FAD1     		bne	.L68
 616              	.LVL43:
 617              	.L67:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 618              		.loc 1 1518 0
 619 0028 0128     		cmp	r0, #1
 620 002a 01D0     		beq	.L69
 621              		.loc 1 1518 0 is_stmt 0 discriminator 1
 622 002c 0328     		cmp	r0, #3
 623 002e 04D1     		bne	.L70
 624              	.L69:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 625              		.loc 1 1523 0 is_stmt 1 discriminator 1
 626 0030 084B     		ldr	r3, .L71+8
 627 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628              	.LVL44:
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 629              		.loc 1 1525 0 discriminator 1
 630 0034 13F0010F 		tst	r3, #1
 631 0038 FAD0     		beq	.L69
 632              	.LVL45:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 39


 633              	.L70:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 634              		.loc 1 1529 0
 635 003a 0138     		subs	r0, r0, #1
 636              	.LVL46:
 637 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 638              		.loc 1 1528 0
 639 003e 0228     		cmp	r0, #2
 640 0040 03D8     		bhi	.L64
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 641              		.loc 1 1534 0
 642 0042 024B     		ldr	r3, .L71
 643 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 644 0046 024B     		ldr	r3, .L71+4
 645 0048 1A70     		strb	r2, [r3]
 646              	.L64:
 647 004a 7047     		bx	lr
 648              	.L72:
 649              		.align	2
 650              	.L71:
 651 004c 00000000 		.word	.LANCHOR0
 652 0050 3B650040 		.word	1073767739
 653 0054 6A650040 		.word	1073767786
 654              	.LBE2:
 655              		.cfi_endproc
 656              	.LFE15:
 657              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 658              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 659              		.align	2
 660              		.global	UART_1_SetTxAddressMode
 661              		.thumb
 662              		.thumb_func
 663              		.type	UART_1_SetTxAddressMode, %function
 664              	UART_1_SetTxAddressMode:
 665              	.LFB16:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
1548:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 40


1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 666              		.loc 1 1573 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671              	.LVL47:
 672 0000 7047     		bx	lr
 673              		.cfi_endproc
 674              	.LFE16:
 675              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 676              		.global	UART_1_initVar
 677 0002 00BF     		.bss
 678              		.set	.LANCHOR0,. + 0
 679              		.type	UART_1_initVar, %object
 680              		.size	UART_1_initVar, 1
 681              	UART_1_initVar:
 682 0000 00       		.space	1
 683              		.type	txPeriod.5066, %object
 684              		.size	txPeriod.5066, 1
 685              	txPeriod.5066:
 686 0001 00       		.space	1
 687              		.text
 688              	.Letext0:
 689              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 690              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 691              		.file 4 "Generated_Source\\PSoC5\\UART_1_IntClock.h"
 692              		.section	.debug_info,"",%progbits
 693              	.Ldebug_info0:
 694 0000 58040000 		.4byte	0x458
 695 0004 0400     		.2byte	0x4
 696 0006 00000000 		.4byte	.Ldebug_abbrev0
 697 000a 04       		.byte	0x4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 41


 698 000b 01       		.uleb128 0x1
 699 000c 06010000 		.4byte	.LASF49
 700 0010 0C       		.byte	0xc
 701 0011 4E020000 		.4byte	.LASF50
 702 0015 D4020000 		.4byte	.LASF51
 703 0019 00000000 		.4byte	.Ldebug_ranges0+0
 704 001d 00000000 		.4byte	0
 705 0021 00000000 		.4byte	.Ldebug_line0
 706 0025 02       		.uleb128 0x2
 707 0026 01       		.byte	0x1
 708 0027 06       		.byte	0x6
 709 0028 B4030000 		.4byte	.LASF0
 710 002c 02       		.uleb128 0x2
 711 002d 01       		.byte	0x1
 712 002e 08       		.byte	0x8
 713 002f FB010000 		.4byte	.LASF1
 714 0033 02       		.uleb128 0x2
 715 0034 02       		.byte	0x2
 716 0035 05       		.byte	0x5
 717 0036 17020000 		.4byte	.LASF2
 718 003a 02       		.uleb128 0x2
 719 003b 02       		.byte	0x2
 720 003c 07       		.byte	0x7
 721 003d 8A000000 		.4byte	.LASF3
 722 0041 02       		.uleb128 0x2
 723 0042 04       		.byte	0x4
 724 0043 05       		.byte	0x5
 725 0044 88030000 		.4byte	.LASF4
 726 0048 02       		.uleb128 0x2
 727 0049 04       		.byte	0x4
 728 004a 07       		.byte	0x7
 729 004b C0010000 		.4byte	.LASF5
 730 004f 02       		.uleb128 0x2
 731 0050 08       		.byte	0x8
 732 0051 05       		.byte	0x5
 733 0052 00000000 		.4byte	.LASF6
 734 0056 02       		.uleb128 0x2
 735 0057 08       		.byte	0x8
 736 0058 07       		.byte	0x7
 737 0059 E3000000 		.4byte	.LASF7
 738 005d 03       		.uleb128 0x3
 739 005e 04       		.byte	0x4
 740 005f 05       		.byte	0x5
 741 0060 696E7400 		.ascii	"int\000"
 742 0064 02       		.uleb128 0x2
 743 0065 04       		.byte	0x4
 744 0066 07       		.byte	0x7
 745 0067 9D000000 		.4byte	.LASF8
 746 006b 04       		.uleb128 0x4
 747 006c D2010000 		.4byte	.LASF9
 748 0070 02       		.byte	0x2
 749 0071 E401     		.2byte	0x1e4
 750 0073 2C000000 		.4byte	0x2c
 751 0077 04       		.uleb128 0x4
 752 0078 21020000 		.4byte	.LASF10
 753 007c 02       		.byte	0x2
 754 007d E501     		.2byte	0x1e5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 42


 755 007f 3A000000 		.4byte	0x3a
 756 0083 02       		.uleb128 0x2
 757 0084 04       		.byte	0x4
 758 0085 04       		.byte	0x4
 759 0086 DD000000 		.4byte	.LASF11
 760 008a 02       		.uleb128 0x2
 761 008b 08       		.byte	0x8
 762 008c 04       		.byte	0x4
 763 008d 09020000 		.4byte	.LASF12
 764 0091 04       		.uleb128 0x4
 765 0092 2D030000 		.4byte	.LASF13
 766 0096 02       		.byte	0x2
 767 0097 F501     		.2byte	0x1f5
 768 0099 9D000000 		.4byte	0x9d
 769 009d 02       		.uleb128 0x2
 770 009e 01       		.byte	0x1
 771 009f 08       		.byte	0x8
 772 00a0 53030000 		.4byte	.LASF14
 773 00a4 04       		.uleb128 0x4
 774 00a5 94010000 		.4byte	.LASF15
 775 00a9 02       		.byte	0x2
 776 00aa 8E02     		.2byte	0x28e
 777 00ac B0000000 		.4byte	0xb0
 778 00b0 05       		.uleb128 0x5
 779 00b1 6B000000 		.4byte	0x6b
 780 00b5 02       		.uleb128 0x2
 781 00b6 08       		.byte	0x8
 782 00b7 04       		.byte	0x4
 783 00b8 A8030000 		.4byte	.LASF16
 784 00bc 02       		.uleb128 0x2
 785 00bd 04       		.byte	0x4
 786 00be 07       		.byte	0x7
 787 00bf 24030000 		.4byte	.LASF17
 788 00c3 06       		.uleb128 0x6
 789 00c4 0E000000 		.4byte	.LASF52
 790 00c8 01       		.byte	0x1
 791 00c9 6A       		.byte	0x6a
 792 00ca 00000000 		.4byte	.LFB1
 793 00ce 18000000 		.4byte	.LFE1-.LFB1
 794 00d2 01       		.uleb128 0x1
 795 00d3 9C       		.byte	0x9c
 796 00d4 07       		.uleb128 0x7
 797 00d5 9A030000 		.4byte	.LASF18
 798 00d9 01       		.byte	0x1
 799 00da B7       		.byte	0xb7
 800 00db 00000000 		.4byte	.LFB2
 801 00df 24000000 		.4byte	.LFE2-.LFB2
 802 00e3 01       		.uleb128 0x1
 803 00e4 9C       		.byte	0x9c
 804 00e5 1B010000 		.4byte	0x11b
 805 00e9 08       		.uleb128 0x8
 806 00ea EA010000 		.4byte	.LASF21
 807 00ee 01       		.byte	0x1
 808 00ef B9       		.byte	0xb9
 809 00f0 6B000000 		.4byte	0x6b
 810 00f4 00000000 		.4byte	.LLST0
 811 00f8 09       		.uleb128 0x9
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 43


 812 00f9 06000000 		.4byte	.LVL0
 813 00fd 2F040000 		.4byte	0x42f
 814 0101 09       		.uleb128 0x9
 815 0102 16000000 		.4byte	.LVL2
 816 0106 3A040000 		.4byte	0x43a
 817 010a 0A       		.uleb128 0xa
 818 010b 1C000000 		.4byte	.LVL3
 819 010f 45040000 		.4byte	0x445
 820 0113 0B       		.uleb128 0xb
 821 0114 01       		.uleb128 0x1
 822 0115 50       		.byte	0x50
 823 0116 02       		.uleb128 0x2
 824 0117 74       		.byte	0x74
 825 0118 00       		.sleb128 0
 826 0119 00       		.byte	0
 827 011a 00       		.byte	0
 828 011b 07       		.uleb128 0x7
 829 011c 1A000000 		.4byte	.LASF19
 830 0120 01       		.byte	0x1
 831 0121 4C       		.byte	0x4c
 832 0122 00000000 		.4byte	.LFB0
 833 0126 1C000000 		.4byte	.LFE0-.LFB0
 834 012a 01       		.uleb128 0x1
 835 012b 9C       		.byte	0x9c
 836 012c 43010000 		.4byte	0x143
 837 0130 09       		.uleb128 0x9
 838 0131 0C000000 		.4byte	.LVL5
 839 0135 C3000000 		.4byte	0xc3
 840 0139 09       		.uleb128 0x9
 841 013a 16000000 		.4byte	.LVL6
 842 013e D4000000 		.4byte	0xd4
 843 0142 00       		.byte	0
 844 0143 07       		.uleb128 0x7
 845 0144 B4010000 		.4byte	.LASF20
 846 0148 01       		.byte	0x1
 847 0149 F0       		.byte	0xf0
 848 014a 00000000 		.4byte	.LFB3
 849 014e 24000000 		.4byte	.LFE3-.LFB3
 850 0152 01       		.uleb128 0x1
 851 0153 9C       		.byte	0x9c
 852 0154 8A010000 		.4byte	0x18a
 853 0158 08       		.uleb128 0x8
 854 0159 EA010000 		.4byte	.LASF21
 855 015d 01       		.byte	0x1
 856 015e F2       		.byte	0xf2
 857 015f 6B000000 		.4byte	0x6b
 858 0163 13000000 		.4byte	.LLST1
 859 0167 09       		.uleb128 0x9
 860 0168 06000000 		.4byte	.LVL7
 861 016c 2F040000 		.4byte	0x42f
 862 0170 09       		.uleb128 0x9
 863 0171 0C000000 		.4byte	.LVL9
 864 0175 50040000 		.4byte	0x450
 865 0179 0A       		.uleb128 0xa
 866 017a 1C000000 		.4byte	.LVL10
 867 017e 45040000 		.4byte	0x445
 868 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 44


 869 0183 01       		.uleb128 0x1
 870 0184 50       		.byte	0x50
 871 0185 02       		.uleb128 0x2
 872 0186 74       		.byte	0x74
 873 0187 00       		.sleb128 0
 874 0188 00       		.byte	0
 875 0189 00       		.byte	0
 876 018a 0C       		.uleb128 0xc
 877 018b 99010000 		.4byte	.LASF28
 878 018f 01       		.byte	0x1
 879 0190 2701     		.2byte	0x127
 880 0192 6B000000 		.4byte	0x6b
 881 0196 00000000 		.4byte	.LFB4
 882 019a 04000000 		.4byte	.LFE4-.LFB4
 883 019e 01       		.uleb128 0x1
 884 019f 9C       		.byte	0x9c
 885 01a0 0D       		.uleb128 0xd
 886 01a1 27000000 		.4byte	.LASF22
 887 01a5 01       		.byte	0x1
 888 01a6 3F01     		.2byte	0x13f
 889 01a8 00000000 		.4byte	.LFB5
 890 01ac 02000000 		.4byte	.LFE5-.LFB5
 891 01b0 01       		.uleb128 0x1
 892 01b1 9C       		.byte	0x9c
 893 01b2 C5010000 		.4byte	0x1c5
 894 01b6 0E       		.uleb128 0xe
 895 01b7 D8010000 		.4byte	.LASF24
 896 01bb 01       		.byte	0x1
 897 01bc 3F01     		.2byte	0x13f
 898 01be 6B000000 		.4byte	0x6b
 899 01c2 01       		.uleb128 0x1
 900 01c3 50       		.byte	0x50
 901 01c4 00       		.byte	0
 902 01c5 0D       		.uleb128 0xd
 903 01c6 5A000000 		.4byte	.LASF23
 904 01ca 01       		.byte	0x1
 905 01cb 8C03     		.2byte	0x38c
 906 01cd 00000000 		.4byte	.LFB6
 907 01d1 0C000000 		.4byte	.LFE6-.LFB6
 908 01d5 01       		.uleb128 0x1
 909 01d6 9C       		.byte	0x9c
 910 01d7 EA010000 		.4byte	0x1ea
 911 01db 0E       		.uleb128 0xe
 912 01dc 10020000 		.4byte	.LASF25
 913 01e0 01       		.byte	0x1
 914 01e1 8C03     		.2byte	0x38c
 915 01e3 6B000000 		.4byte	0x6b
 916 01e7 01       		.uleb128 0x1
 917 01e8 50       		.byte	0x50
 918 01e9 00       		.byte	0
 919 01ea 0D       		.uleb128 0xd
 920 01eb 60030000 		.4byte	.LASF26
 921 01ef 01       		.byte	0x1
 922 01f0 AE03     		.2byte	0x3ae
 923 01f2 00000000 		.4byte	.LFB7
 924 01f6 14000000 		.4byte	.LFE7-.LFB7
 925 01fa 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 45


 926 01fb 9C       		.byte	0x9c
 927 01fc 0F020000 		.4byte	0x20f
 928 0200 0E       		.uleb128 0xe
 929 0201 48030000 		.4byte	.LASF27
 930 0205 01       		.byte	0x1
 931 0206 AE03     		.2byte	0x3ae
 932 0208 6B000000 		.4byte	0x6b
 933 020c 01       		.uleb128 0x1
 934 020d 50       		.byte	0x50
 935 020e 00       		.byte	0
 936 020f 0C       		.uleb128 0xc
 937 0210 C2000000 		.4byte	.LASF29
 938 0214 01       		.byte	0x1
 939 0215 EB03     		.2byte	0x3eb
 940 0217 6B000000 		.4byte	0x6b
 941 021b 00000000 		.4byte	.LFB8
 942 021f 0C000000 		.4byte	.LFE8-.LFB8
 943 0223 01       		.uleb128 0x1
 944 0224 9C       		.byte	0x9c
 945 0225 0D       		.uleb128 0xd
 946 0226 3F020000 		.4byte	.LASF30
 947 022a 01       		.byte	0x1
 948 022b 1104     		.2byte	0x411
 949 022d 00000000 		.4byte	.LFB9
 950 0231 18000000 		.4byte	.LFE9-.LFB9
 951 0235 01       		.uleb128 0x1
 952 0236 9C       		.byte	0x9c
 953 0237 4A020000 		.4byte	0x24a
 954 023b 0E       		.uleb128 0xe
 955 023c 48030000 		.4byte	.LASF27
 956 0240 01       		.byte	0x1
 957 0241 1104     		.2byte	0x411
 958 0243 6B000000 		.4byte	0x6b
 959 0247 01       		.uleb128 0x1
 960 0248 50       		.byte	0x50
 961 0249 00       		.byte	0
 962 024a 0D       		.uleb128 0xd
 963 024b C0030000 		.4byte	.LASF31
 964 024f 01       		.byte	0x1
 965 0250 7904     		.2byte	0x479
 966 0252 00000000 		.4byte	.LFB10
 967 0256 24000000 		.4byte	.LFE10-.LFB10
 968 025a 01       		.uleb128 0x1
 969 025b 9C       		.byte	0x9c
 970 025c 8A020000 		.4byte	0x28a
 971 0260 0F       		.uleb128 0xf
 972 0261 D6000000 		.4byte	.LASF32
 973 0265 01       		.byte	0x1
 974 0266 7904     		.2byte	0x479
 975 0268 8A020000 		.4byte	0x28a
 976 026c 26000000 		.4byte	.LLST2
 977 0270 10       		.uleb128 0x10
 978 0271 AA020000 		.4byte	.LASF33
 979 0275 01       		.byte	0x1
 980 0276 7B04     		.2byte	0x47b
 981 0278 77000000 		.4byte	0x77
 982 027c 68000000 		.4byte	.LLST3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 46


 983 0280 09       		.uleb128 0x9
 984 0281 0E000000 		.4byte	.LVL19
 985 0285 25020000 		.4byte	0x225
 986 0289 00       		.byte	0
 987 028a 11       		.uleb128 0x11
 988 028b 04       		.byte	0x4
 989 028c 90020000 		.4byte	0x290
 990 0290 12       		.uleb128 0x12
 991 0291 91000000 		.4byte	0x91
 992 0295 0D       		.uleb128 0xd
 993 0296 C4020000 		.4byte	.LASF34
 994 029a 01       		.byte	0x1
 995 029b A704     		.2byte	0x4a7
 996 029d 00000000 		.4byte	.LFB11
 997 02a1 28000000 		.4byte	.LFE11-.LFB11
 998 02a5 01       		.uleb128 0x1
 999 02a6 9C       		.byte	0x9c
 1000 02a7 E5020000 		.4byte	0x2e5
 1001 02ab 0F       		.uleb128 0xf
 1002 02ac D6000000 		.4byte	.LASF32
 1003 02b0 01       		.byte	0x1
 1004 02b1 A704     		.2byte	0x4a7
 1005 02b3 E5020000 		.4byte	0x2e5
 1006 02b7 A9000000 		.4byte	.LLST4
 1007 02bb 0F       		.uleb128 0xf
 1008 02bc E0010000 		.4byte	.LASF35
 1009 02c0 01       		.byte	0x1
 1010 02c1 A704     		.2byte	0x4a7
 1011 02c3 6B000000 		.4byte	0x6b
 1012 02c7 EB000000 		.4byte	.LLST5
 1013 02cb 10       		.uleb128 0x10
 1014 02cc AA020000 		.4byte	.LASF33
 1015 02d0 01       		.byte	0x1
 1016 02d1 AA04     		.2byte	0x4aa
 1017 02d3 6B000000 		.4byte	0x6b
 1018 02d7 25010000 		.4byte	.LLST6
 1019 02db 09       		.uleb128 0x9
 1020 02dc 0E000000 		.4byte	.LVL27
 1021 02e0 25020000 		.4byte	0x225
 1022 02e4 00       		.byte	0
 1023 02e5 11       		.uleb128 0x11
 1024 02e6 04       		.byte	0x4
 1025 02e7 EB020000 		.4byte	0x2eb
 1026 02eb 12       		.uleb128 0x12
 1027 02ec 6B000000 		.4byte	0x6b
 1028 02f0 0D       		.uleb128 0xd
 1029 02f1 9B020000 		.4byte	.LASF36
 1030 02f5 01       		.byte	0x1
 1031 02f6 CE04     		.2byte	0x4ce
 1032 02f8 00000000 		.4byte	.LFB12
 1033 02fc 20000000 		.4byte	.LFE12-.LFB12
 1034 0300 01       		.uleb128 0x1
 1035 0301 9C       		.byte	0x9c
 1036 0302 42030000 		.4byte	0x342
 1037 0306 0F       		.uleb128 0xf
 1038 0307 48030000 		.4byte	.LASF27
 1039 030b 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 47


 1040 030c CE04     		.2byte	0x4ce
 1041 030e 6B000000 		.4byte	0x6b
 1042 0312 66010000 		.4byte	.LLST7
 1043 0316 09       		.uleb128 0x9
 1044 0317 0C000000 		.4byte	.LVL34
 1045 031b 25020000 		.4byte	0x225
 1046 031f 13       		.uleb128 0x13
 1047 0320 12000000 		.4byte	.LVL35
 1048 0324 25020000 		.4byte	0x225
 1049 0328 32030000 		.4byte	0x332
 1050 032c 0B       		.uleb128 0xb
 1051 032d 01       		.uleb128 0x1
 1052 032e 50       		.byte	0x50
 1053 032f 01       		.uleb128 0x1
 1054 0330 3D       		.byte	0x3d
 1055 0331 00       		.byte	0
 1056 0332 0A       		.uleb128 0xa
 1057 0333 18000000 		.4byte	.LVL36
 1058 0337 25020000 		.4byte	0x225
 1059 033b 0B       		.uleb128 0xb
 1060 033c 01       		.uleb128 0x1
 1061 033d 50       		.byte	0x50
 1062 033e 01       		.uleb128 0x1
 1063 033f 3A       		.byte	0x3a
 1064 0340 00       		.byte	0
 1065 0341 00       		.byte	0
 1066 0342 14       		.uleb128 0x14
 1067 0343 6E020000 		.4byte	.LASF53
 1068 0347 01       		.byte	0x1
 1069 0348 F904     		.2byte	0x4f9
 1070 034a 6B000000 		.4byte	0x6b
 1071 034e 00000000 		.4byte	.LFB13
 1072 0352 24000000 		.4byte	.LFE13-.LFB13
 1073 0356 01       		.uleb128 0x1
 1074 0357 9C       		.byte	0x9c
 1075 0358 6D030000 		.4byte	0x36d
 1076 035c 10       		.uleb128 0x10
 1077 035d D1030000 		.4byte	.LASF37
 1078 0361 01       		.byte	0x1
 1079 0362 FC04     		.2byte	0x4fc
 1080 0364 6B000000 		.4byte	0x6b
 1081 0368 87010000 		.4byte	.LLST8
 1082 036c 00       		.byte	0
 1083 036d 0D       		.uleb128 0xd
 1084 036e 73030000 		.4byte	.LASF38
 1085 0372 01       		.byte	0x1
 1086 0373 4A05     		.2byte	0x54a
 1087 0375 00000000 		.4byte	.LFB14
 1088 0379 24000000 		.4byte	.LFE14-.LFB14
 1089 037d 01       		.uleb128 0x1
 1090 037e 9C       		.byte	0x9c
 1091 037f A6030000 		.4byte	0x3a6
 1092 0383 10       		.uleb128 0x10
 1093 0384 EA010000 		.4byte	.LASF21
 1094 0388 01       		.byte	0x1
 1095 0389 4C05     		.2byte	0x54c
 1096 038b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 48


 1097 038f A5010000 		.4byte	.LLST9
 1098 0393 09       		.uleb128 0x9
 1099 0394 06000000 		.4byte	.LVL39
 1100 0398 2F040000 		.4byte	0x42f
 1101 039c 09       		.uleb128 0x9
 1102 039d 1C000000 		.4byte	.LVL40
 1103 03a1 45040000 		.4byte	0x445
 1104 03a5 00       		.byte	0
 1105 03a6 0D       		.uleb128 0xd
 1106 03a7 B3020000 		.4byte	.LASF39
 1107 03ab 01       		.byte	0x1
 1108 03ac A005     		.2byte	0x5a0
 1109 03ae 00000000 		.4byte	.LFB15
 1110 03b2 58000000 		.4byte	.LFE15-.LFB15
 1111 03b6 01       		.uleb128 0x1
 1112 03b7 9C       		.byte	0x9c
 1113 03b8 F9030000 		.4byte	0x3f9
 1114 03bc 0F       		.uleb128 0xf
 1115 03bd 58030000 		.4byte	.LASF40
 1116 03c1 01       		.byte	0x1
 1117 03c2 A005     		.2byte	0x5a0
 1118 03c4 6B000000 		.4byte	0x6b
 1119 03c8 B8010000 		.4byte	.LLST10
 1120 03cc 15       		.uleb128 0x15
 1121 03cd 06000000 		.4byte	.LBB2
 1122 03d1 52000000 		.4byte	.LBE2-.LBB2
 1123 03d5 10       		.uleb128 0x10
 1124 03d6 52000000 		.4byte	.LASF41
 1125 03da 01       		.byte	0x1
 1126 03db A805     		.2byte	0x5a8
 1127 03dd 6B000000 		.4byte	0x6b
 1128 03e1 D9010000 		.4byte	.LLST11
 1129 03e5 16       		.uleb128 0x16
 1130 03e6 91030000 		.4byte	.LASF42
 1131 03ea 01       		.byte	0x1
 1132 03eb D005     		.2byte	0x5d0
 1133 03ed 6B000000 		.4byte	0x6b
 1134 03f1 05       		.uleb128 0x5
 1135 03f2 03       		.byte	0x3
 1136 03f3 01000000 		.4byte	txPeriod.5066
 1137 03f7 00       		.byte	0
 1138 03f8 00       		.byte	0
 1139 03f9 0D       		.uleb128 0xd
 1140 03fa AA000000 		.4byte	.LASF43
 1141 03fe 01       		.byte	0x1
 1142 03ff 2406     		.2byte	0x624
 1143 0401 00000000 		.4byte	.LFB16
 1144 0405 02000000 		.4byte	.LFE16-.LFB16
 1145 0409 01       		.uleb128 0x1
 1146 040a 9C       		.byte	0x9c
 1147 040b 1E040000 		.4byte	0x41e
 1148 040f 0E       		.uleb128 0xe
 1149 0410 FA000000 		.4byte	.LASF44
 1150 0414 01       		.byte	0x1
 1151 0415 2406     		.2byte	0x624
 1152 0417 6B000000 		.4byte	0x6b
 1153 041b 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 49


 1154 041c 50       		.byte	0x50
 1155 041d 00       		.byte	0
 1156 041e 17       		.uleb128 0x17
 1157 041f 43000000 		.4byte	.LASF54
 1158 0423 01       		.byte	0x1
 1159 0424 1B       		.byte	0x1b
 1160 0425 6B000000 		.4byte	0x6b
 1161 0429 05       		.uleb128 0x5
 1162 042a 03       		.byte	0x3
 1163 042b 00000000 		.4byte	UART_1_initVar
 1164 042f 18       		.uleb128 0x18
 1165 0430 28020000 		.4byte	.LASF45
 1166 0434 28020000 		.4byte	.LASF45
 1167 0438 03       		.byte	0x3
 1168 0439 7D       		.byte	0x7d
 1169 043a 18       		.uleb128 0x18
 1170 043b 74000000 		.4byte	.LASF46
 1171 043f 74000000 		.4byte	.LASF46
 1172 0443 04       		.byte	0x4
 1173 0444 27       		.byte	0x27
 1174 0445 18       		.uleb128 0x18
 1175 0446 85020000 		.4byte	.LASF47
 1176 044a 85020000 		.4byte	.LASF47
 1177 044e 03       		.byte	0x3
 1178 044f 7E       		.byte	0x7e
 1179 0450 18       		.uleb128 0x18
 1180 0451 33030000 		.4byte	.LASF48
 1181 0455 33030000 		.4byte	.LASF48
 1182 0459 04       		.byte	0x4
 1183 045a 28       		.byte	0x28
 1184 045b 00       		.byte	0
 1185              		.section	.debug_abbrev,"",%progbits
 1186              	.Ldebug_abbrev0:
 1187 0000 01       		.uleb128 0x1
 1188 0001 11       		.uleb128 0x11
 1189 0002 01       		.byte	0x1
 1190 0003 25       		.uleb128 0x25
 1191 0004 0E       		.uleb128 0xe
 1192 0005 13       		.uleb128 0x13
 1193 0006 0B       		.uleb128 0xb
 1194 0007 03       		.uleb128 0x3
 1195 0008 0E       		.uleb128 0xe
 1196 0009 1B       		.uleb128 0x1b
 1197 000a 0E       		.uleb128 0xe
 1198 000b 55       		.uleb128 0x55
 1199 000c 17       		.uleb128 0x17
 1200 000d 11       		.uleb128 0x11
 1201 000e 01       		.uleb128 0x1
 1202 000f 10       		.uleb128 0x10
 1203 0010 17       		.uleb128 0x17
 1204 0011 00       		.byte	0
 1205 0012 00       		.byte	0
 1206 0013 02       		.uleb128 0x2
 1207 0014 24       		.uleb128 0x24
 1208 0015 00       		.byte	0
 1209 0016 0B       		.uleb128 0xb
 1210 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 50


 1211 0018 3E       		.uleb128 0x3e
 1212 0019 0B       		.uleb128 0xb
 1213 001a 03       		.uleb128 0x3
 1214 001b 0E       		.uleb128 0xe
 1215 001c 00       		.byte	0
 1216 001d 00       		.byte	0
 1217 001e 03       		.uleb128 0x3
 1218 001f 24       		.uleb128 0x24
 1219 0020 00       		.byte	0
 1220 0021 0B       		.uleb128 0xb
 1221 0022 0B       		.uleb128 0xb
 1222 0023 3E       		.uleb128 0x3e
 1223 0024 0B       		.uleb128 0xb
 1224 0025 03       		.uleb128 0x3
 1225 0026 08       		.uleb128 0x8
 1226 0027 00       		.byte	0
 1227 0028 00       		.byte	0
 1228 0029 04       		.uleb128 0x4
 1229 002a 16       		.uleb128 0x16
 1230 002b 00       		.byte	0
 1231 002c 03       		.uleb128 0x3
 1232 002d 0E       		.uleb128 0xe
 1233 002e 3A       		.uleb128 0x3a
 1234 002f 0B       		.uleb128 0xb
 1235 0030 3B       		.uleb128 0x3b
 1236 0031 05       		.uleb128 0x5
 1237 0032 49       		.uleb128 0x49
 1238 0033 13       		.uleb128 0x13
 1239 0034 00       		.byte	0
 1240 0035 00       		.byte	0
 1241 0036 05       		.uleb128 0x5
 1242 0037 35       		.uleb128 0x35
 1243 0038 00       		.byte	0
 1244 0039 49       		.uleb128 0x49
 1245 003a 13       		.uleb128 0x13
 1246 003b 00       		.byte	0
 1247 003c 00       		.byte	0
 1248 003d 06       		.uleb128 0x6
 1249 003e 2E       		.uleb128 0x2e
 1250 003f 00       		.byte	0
 1251 0040 3F       		.uleb128 0x3f
 1252 0041 19       		.uleb128 0x19
 1253 0042 03       		.uleb128 0x3
 1254 0043 0E       		.uleb128 0xe
 1255 0044 3A       		.uleb128 0x3a
 1256 0045 0B       		.uleb128 0xb
 1257 0046 3B       		.uleb128 0x3b
 1258 0047 0B       		.uleb128 0xb
 1259 0048 27       		.uleb128 0x27
 1260 0049 19       		.uleb128 0x19
 1261 004a 11       		.uleb128 0x11
 1262 004b 01       		.uleb128 0x1
 1263 004c 12       		.uleb128 0x12
 1264 004d 06       		.uleb128 0x6
 1265 004e 40       		.uleb128 0x40
 1266 004f 18       		.uleb128 0x18
 1267 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 51


 1268 0052 19       		.uleb128 0x19
 1269 0053 00       		.byte	0
 1270 0054 00       		.byte	0
 1271 0055 07       		.uleb128 0x7
 1272 0056 2E       		.uleb128 0x2e
 1273 0057 01       		.byte	0x1
 1274 0058 3F       		.uleb128 0x3f
 1275 0059 19       		.uleb128 0x19
 1276 005a 03       		.uleb128 0x3
 1277 005b 0E       		.uleb128 0xe
 1278 005c 3A       		.uleb128 0x3a
 1279 005d 0B       		.uleb128 0xb
 1280 005e 3B       		.uleb128 0x3b
 1281 005f 0B       		.uleb128 0xb
 1282 0060 27       		.uleb128 0x27
 1283 0061 19       		.uleb128 0x19
 1284 0062 11       		.uleb128 0x11
 1285 0063 01       		.uleb128 0x1
 1286 0064 12       		.uleb128 0x12
 1287 0065 06       		.uleb128 0x6
 1288 0066 40       		.uleb128 0x40
 1289 0067 18       		.uleb128 0x18
 1290 0068 9742     		.uleb128 0x2117
 1291 006a 19       		.uleb128 0x19
 1292 006b 01       		.uleb128 0x1
 1293 006c 13       		.uleb128 0x13
 1294 006d 00       		.byte	0
 1295 006e 00       		.byte	0
 1296 006f 08       		.uleb128 0x8
 1297 0070 34       		.uleb128 0x34
 1298 0071 00       		.byte	0
 1299 0072 03       		.uleb128 0x3
 1300 0073 0E       		.uleb128 0xe
 1301 0074 3A       		.uleb128 0x3a
 1302 0075 0B       		.uleb128 0xb
 1303 0076 3B       		.uleb128 0x3b
 1304 0077 0B       		.uleb128 0xb
 1305 0078 49       		.uleb128 0x49
 1306 0079 13       		.uleb128 0x13
 1307 007a 02       		.uleb128 0x2
 1308 007b 17       		.uleb128 0x17
 1309 007c 00       		.byte	0
 1310 007d 00       		.byte	0
 1311 007e 09       		.uleb128 0x9
 1312 007f 898201   		.uleb128 0x4109
 1313 0082 00       		.byte	0
 1314 0083 11       		.uleb128 0x11
 1315 0084 01       		.uleb128 0x1
 1316 0085 31       		.uleb128 0x31
 1317 0086 13       		.uleb128 0x13
 1318 0087 00       		.byte	0
 1319 0088 00       		.byte	0
 1320 0089 0A       		.uleb128 0xa
 1321 008a 898201   		.uleb128 0x4109
 1322 008d 01       		.byte	0x1
 1323 008e 11       		.uleb128 0x11
 1324 008f 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 52


 1325 0090 31       		.uleb128 0x31
 1326 0091 13       		.uleb128 0x13
 1327 0092 00       		.byte	0
 1328 0093 00       		.byte	0
 1329 0094 0B       		.uleb128 0xb
 1330 0095 8A8201   		.uleb128 0x410a
 1331 0098 00       		.byte	0
 1332 0099 02       		.uleb128 0x2
 1333 009a 18       		.uleb128 0x18
 1334 009b 9142     		.uleb128 0x2111
 1335 009d 18       		.uleb128 0x18
 1336 009e 00       		.byte	0
 1337 009f 00       		.byte	0
 1338 00a0 0C       		.uleb128 0xc
 1339 00a1 2E       		.uleb128 0x2e
 1340 00a2 00       		.byte	0
 1341 00a3 3F       		.uleb128 0x3f
 1342 00a4 19       		.uleb128 0x19
 1343 00a5 03       		.uleb128 0x3
 1344 00a6 0E       		.uleb128 0xe
 1345 00a7 3A       		.uleb128 0x3a
 1346 00a8 0B       		.uleb128 0xb
 1347 00a9 3B       		.uleb128 0x3b
 1348 00aa 05       		.uleb128 0x5
 1349 00ab 27       		.uleb128 0x27
 1350 00ac 19       		.uleb128 0x19
 1351 00ad 49       		.uleb128 0x49
 1352 00ae 13       		.uleb128 0x13
 1353 00af 11       		.uleb128 0x11
 1354 00b0 01       		.uleb128 0x1
 1355 00b1 12       		.uleb128 0x12
 1356 00b2 06       		.uleb128 0x6
 1357 00b3 40       		.uleb128 0x40
 1358 00b4 18       		.uleb128 0x18
 1359 00b5 9742     		.uleb128 0x2117
 1360 00b7 19       		.uleb128 0x19
 1361 00b8 00       		.byte	0
 1362 00b9 00       		.byte	0
 1363 00ba 0D       		.uleb128 0xd
 1364 00bb 2E       		.uleb128 0x2e
 1365 00bc 01       		.byte	0x1
 1366 00bd 3F       		.uleb128 0x3f
 1367 00be 19       		.uleb128 0x19
 1368 00bf 03       		.uleb128 0x3
 1369 00c0 0E       		.uleb128 0xe
 1370 00c1 3A       		.uleb128 0x3a
 1371 00c2 0B       		.uleb128 0xb
 1372 00c3 3B       		.uleb128 0x3b
 1373 00c4 05       		.uleb128 0x5
 1374 00c5 27       		.uleb128 0x27
 1375 00c6 19       		.uleb128 0x19
 1376 00c7 11       		.uleb128 0x11
 1377 00c8 01       		.uleb128 0x1
 1378 00c9 12       		.uleb128 0x12
 1379 00ca 06       		.uleb128 0x6
 1380 00cb 40       		.uleb128 0x40
 1381 00cc 18       		.uleb128 0x18
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 53


 1382 00cd 9742     		.uleb128 0x2117
 1383 00cf 19       		.uleb128 0x19
 1384 00d0 01       		.uleb128 0x1
 1385 00d1 13       		.uleb128 0x13
 1386 00d2 00       		.byte	0
 1387 00d3 00       		.byte	0
 1388 00d4 0E       		.uleb128 0xe
 1389 00d5 05       		.uleb128 0x5
 1390 00d6 00       		.byte	0
 1391 00d7 03       		.uleb128 0x3
 1392 00d8 0E       		.uleb128 0xe
 1393 00d9 3A       		.uleb128 0x3a
 1394 00da 0B       		.uleb128 0xb
 1395 00db 3B       		.uleb128 0x3b
 1396 00dc 05       		.uleb128 0x5
 1397 00dd 49       		.uleb128 0x49
 1398 00de 13       		.uleb128 0x13
 1399 00df 02       		.uleb128 0x2
 1400 00e0 18       		.uleb128 0x18
 1401 00e1 00       		.byte	0
 1402 00e2 00       		.byte	0
 1403 00e3 0F       		.uleb128 0xf
 1404 00e4 05       		.uleb128 0x5
 1405 00e5 00       		.byte	0
 1406 00e6 03       		.uleb128 0x3
 1407 00e7 0E       		.uleb128 0xe
 1408 00e8 3A       		.uleb128 0x3a
 1409 00e9 0B       		.uleb128 0xb
 1410 00ea 3B       		.uleb128 0x3b
 1411 00eb 05       		.uleb128 0x5
 1412 00ec 49       		.uleb128 0x49
 1413 00ed 13       		.uleb128 0x13
 1414 00ee 02       		.uleb128 0x2
 1415 00ef 17       		.uleb128 0x17
 1416 00f0 00       		.byte	0
 1417 00f1 00       		.byte	0
 1418 00f2 10       		.uleb128 0x10
 1419 00f3 34       		.uleb128 0x34
 1420 00f4 00       		.byte	0
 1421 00f5 03       		.uleb128 0x3
 1422 00f6 0E       		.uleb128 0xe
 1423 00f7 3A       		.uleb128 0x3a
 1424 00f8 0B       		.uleb128 0xb
 1425 00f9 3B       		.uleb128 0x3b
 1426 00fa 05       		.uleb128 0x5
 1427 00fb 49       		.uleb128 0x49
 1428 00fc 13       		.uleb128 0x13
 1429 00fd 02       		.uleb128 0x2
 1430 00fe 17       		.uleb128 0x17
 1431 00ff 00       		.byte	0
 1432 0100 00       		.byte	0
 1433 0101 11       		.uleb128 0x11
 1434 0102 0F       		.uleb128 0xf
 1435 0103 00       		.byte	0
 1436 0104 0B       		.uleb128 0xb
 1437 0105 0B       		.uleb128 0xb
 1438 0106 49       		.uleb128 0x49
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 54


 1439 0107 13       		.uleb128 0x13
 1440 0108 00       		.byte	0
 1441 0109 00       		.byte	0
 1442 010a 12       		.uleb128 0x12
 1443 010b 26       		.uleb128 0x26
 1444 010c 00       		.byte	0
 1445 010d 49       		.uleb128 0x49
 1446 010e 13       		.uleb128 0x13
 1447 010f 00       		.byte	0
 1448 0110 00       		.byte	0
 1449 0111 13       		.uleb128 0x13
 1450 0112 898201   		.uleb128 0x4109
 1451 0115 01       		.byte	0x1
 1452 0116 11       		.uleb128 0x11
 1453 0117 01       		.uleb128 0x1
 1454 0118 31       		.uleb128 0x31
 1455 0119 13       		.uleb128 0x13
 1456 011a 01       		.uleb128 0x1
 1457 011b 13       		.uleb128 0x13
 1458 011c 00       		.byte	0
 1459 011d 00       		.byte	0
 1460 011e 14       		.uleb128 0x14
 1461 011f 2E       		.uleb128 0x2e
 1462 0120 01       		.byte	0x1
 1463 0121 3F       		.uleb128 0x3f
 1464 0122 19       		.uleb128 0x19
 1465 0123 03       		.uleb128 0x3
 1466 0124 0E       		.uleb128 0xe
 1467 0125 3A       		.uleb128 0x3a
 1468 0126 0B       		.uleb128 0xb
 1469 0127 3B       		.uleb128 0x3b
 1470 0128 05       		.uleb128 0x5
 1471 0129 27       		.uleb128 0x27
 1472 012a 19       		.uleb128 0x19
 1473 012b 49       		.uleb128 0x49
 1474 012c 13       		.uleb128 0x13
 1475 012d 11       		.uleb128 0x11
 1476 012e 01       		.uleb128 0x1
 1477 012f 12       		.uleb128 0x12
 1478 0130 06       		.uleb128 0x6
 1479 0131 40       		.uleb128 0x40
 1480 0132 18       		.uleb128 0x18
 1481 0133 9742     		.uleb128 0x2117
 1482 0135 19       		.uleb128 0x19
 1483 0136 01       		.uleb128 0x1
 1484 0137 13       		.uleb128 0x13
 1485 0138 00       		.byte	0
 1486 0139 00       		.byte	0
 1487 013a 15       		.uleb128 0x15
 1488 013b 0B       		.uleb128 0xb
 1489 013c 01       		.byte	0x1
 1490 013d 11       		.uleb128 0x11
 1491 013e 01       		.uleb128 0x1
 1492 013f 12       		.uleb128 0x12
 1493 0140 06       		.uleb128 0x6
 1494 0141 00       		.byte	0
 1495 0142 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 55


 1496 0143 16       		.uleb128 0x16
 1497 0144 34       		.uleb128 0x34
 1498 0145 00       		.byte	0
 1499 0146 03       		.uleb128 0x3
 1500 0147 0E       		.uleb128 0xe
 1501 0148 3A       		.uleb128 0x3a
 1502 0149 0B       		.uleb128 0xb
 1503 014a 3B       		.uleb128 0x3b
 1504 014b 05       		.uleb128 0x5
 1505 014c 49       		.uleb128 0x49
 1506 014d 13       		.uleb128 0x13
 1507 014e 02       		.uleb128 0x2
 1508 014f 18       		.uleb128 0x18
 1509 0150 00       		.byte	0
 1510 0151 00       		.byte	0
 1511 0152 17       		.uleb128 0x17
 1512 0153 34       		.uleb128 0x34
 1513 0154 00       		.byte	0
 1514 0155 03       		.uleb128 0x3
 1515 0156 0E       		.uleb128 0xe
 1516 0157 3A       		.uleb128 0x3a
 1517 0158 0B       		.uleb128 0xb
 1518 0159 3B       		.uleb128 0x3b
 1519 015a 0B       		.uleb128 0xb
 1520 015b 49       		.uleb128 0x49
 1521 015c 13       		.uleb128 0x13
 1522 015d 3F       		.uleb128 0x3f
 1523 015e 19       		.uleb128 0x19
 1524 015f 02       		.uleb128 0x2
 1525 0160 18       		.uleb128 0x18
 1526 0161 00       		.byte	0
 1527 0162 00       		.byte	0
 1528 0163 18       		.uleb128 0x18
 1529 0164 2E       		.uleb128 0x2e
 1530 0165 00       		.byte	0
 1531 0166 3F       		.uleb128 0x3f
 1532 0167 19       		.uleb128 0x19
 1533 0168 3C       		.uleb128 0x3c
 1534 0169 19       		.uleb128 0x19
 1535 016a 6E       		.uleb128 0x6e
 1536 016b 0E       		.uleb128 0xe
 1537 016c 03       		.uleb128 0x3
 1538 016d 0E       		.uleb128 0xe
 1539 016e 3A       		.uleb128 0x3a
 1540 016f 0B       		.uleb128 0xb
 1541 0170 3B       		.uleb128 0x3b
 1542 0171 0B       		.uleb128 0xb
 1543 0172 00       		.byte	0
 1544 0173 00       		.byte	0
 1545 0174 00       		.byte	0
 1546              		.section	.debug_loc,"",%progbits
 1547              	.Ldebug_loc0:
 1548              	.LLST0:
 1549 0000 08000000 		.4byte	.LVL1
 1550 0004 1E000000 		.4byte	.LVL4
 1551 0008 0100     		.2byte	0x1
 1552 000a 54       		.byte	0x54
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 56


 1553 000b 00000000 		.4byte	0
 1554 000f 00000000 		.4byte	0
 1555              	.LLST1:
 1556 0013 08000000 		.4byte	.LVL8
 1557 0017 1E000000 		.4byte	.LVL11
 1558 001b 0100     		.2byte	0x1
 1559 001d 54       		.byte	0x54
 1560 001e 00000000 		.4byte	0
 1561 0022 00000000 		.4byte	0
 1562              	.LLST2:
 1563 0026 00000000 		.4byte	.LVL16
 1564 002a 0A000000 		.4byte	.LVL18
 1565 002e 0100     		.2byte	0x1
 1566 0030 50       		.byte	0x50
 1567 0031 0A000000 		.4byte	.LVL18
 1568 0035 14000000 		.4byte	.LVL22
 1569 0039 0100     		.2byte	0x1
 1570 003b 55       		.byte	0x55
 1571 003c 14000000 		.4byte	.LVL22
 1572 0040 18000000 		.4byte	.LVL23
 1573 0044 0100     		.2byte	0x1
 1574 0046 50       		.byte	0x50
 1575 0047 18000000 		.4byte	.LVL23
 1576 004b 20000000 		.4byte	.LVL24
 1577 004f 0100     		.2byte	0x1
 1578 0051 55       		.byte	0x55
 1579 0052 20000000 		.4byte	.LVL24
 1580 0056 24000000 		.4byte	.LFE10
 1581 005a 0400     		.2byte	0x4
 1582 005c F3       		.byte	0xf3
 1583 005d 01       		.uleb128 0x1
 1584 005e 50       		.byte	0x50
 1585 005f 9F       		.byte	0x9f
 1586 0060 00000000 		.4byte	0
 1587 0064 00000000 		.4byte	0
 1588              	.LLST3:
 1589 0068 02000000 		.4byte	.LVL17
 1590 006c 0A000000 		.4byte	.LVL18
 1591 0070 0200     		.2byte	0x2
 1592 0072 30       		.byte	0x30
 1593 0073 9F       		.byte	0x9f
 1594 0074 0A000000 		.4byte	.LVL18
 1595 0078 10000000 		.4byte	.LVL20
 1596 007c 0100     		.2byte	0x1
 1597 007e 54       		.byte	0x54
 1598 007f 12000000 		.4byte	.LVL21
 1599 0083 14000000 		.4byte	.LVL22
 1600 0087 0100     		.2byte	0x1
 1601 0089 54       		.byte	0x54
 1602 008a 14000000 		.4byte	.LVL22
 1603 008e 18000000 		.4byte	.LVL23
 1604 0092 0200     		.2byte	0x2
 1605 0094 30       		.byte	0x30
 1606 0095 9F       		.byte	0x9f
 1607 0096 18000000 		.4byte	.LVL23
 1608 009a 20000000 		.4byte	.LVL24
 1609 009e 0100     		.2byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 57


 1610 00a0 54       		.byte	0x54
 1611 00a1 00000000 		.4byte	0
 1612 00a5 00000000 		.4byte	0
 1613              	.LLST4:
 1614 00a9 00000000 		.4byte	.LVL25
 1615 00ad 08000000 		.4byte	.LVL26
 1616 00b1 0100     		.2byte	0x1
 1617 00b3 50       		.byte	0x50
 1618 00b4 08000000 		.4byte	.LVL26
 1619 00b8 14000000 		.4byte	.LVL30
 1620 00bc 0100     		.2byte	0x1
 1621 00be 56       		.byte	0x56
 1622 00bf 14000000 		.4byte	.LVL30
 1623 00c3 1C000000 		.4byte	.LVL31
 1624 00c7 0100     		.2byte	0x1
 1625 00c9 50       		.byte	0x50
 1626 00ca 1C000000 		.4byte	.LVL31
 1627 00ce 22000000 		.4byte	.LVL32
 1628 00d2 0100     		.2byte	0x1
 1629 00d4 56       		.byte	0x56
 1630 00d5 22000000 		.4byte	.LVL32
 1631 00d9 28000000 		.4byte	.LFE11
 1632 00dd 0400     		.2byte	0x4
 1633 00df F3       		.byte	0xf3
 1634 00e0 01       		.uleb128 0x1
 1635 00e1 50       		.byte	0x50
 1636 00e2 9F       		.byte	0x9f
 1637 00e3 00000000 		.4byte	0
 1638 00e7 00000000 		.4byte	0
 1639              	.LLST5:
 1640 00eb 00000000 		.4byte	.LVL25
 1641 00ef 08000000 		.4byte	.LVL26
 1642 00f3 0100     		.2byte	0x1
 1643 00f5 51       		.byte	0x51
 1644 00f6 08000000 		.4byte	.LVL26
 1645 00fa 14000000 		.4byte	.LVL30
 1646 00fe 0400     		.2byte	0x4
 1647 0100 F3       		.byte	0xf3
 1648 0101 01       		.uleb128 0x1
 1649 0102 51       		.byte	0x51
 1650 0103 9F       		.byte	0x9f
 1651 0104 14000000 		.4byte	.LVL30
 1652 0108 1C000000 		.4byte	.LVL31
 1653 010c 0100     		.2byte	0x1
 1654 010e 51       		.byte	0x51
 1655 010f 1C000000 		.4byte	.LVL31
 1656 0113 28000000 		.4byte	.LFE11
 1657 0117 0400     		.2byte	0x4
 1658 0119 F3       		.byte	0xf3
 1659 011a 01       		.uleb128 0x1
 1660 011b 51       		.byte	0x51
 1661 011c 9F       		.byte	0x9f
 1662 011d 00000000 		.4byte	0
 1663 0121 00000000 		.4byte	0
 1664              	.LLST6:
 1665 0125 00000000 		.4byte	.LVL25
 1666 0129 08000000 		.4byte	.LVL26
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 58


 1667 012d 0200     		.2byte	0x2
 1668 012f 30       		.byte	0x30
 1669 0130 9F       		.byte	0x9f
 1670 0131 08000000 		.4byte	.LVL26
 1671 0135 10000000 		.4byte	.LVL28
 1672 0139 0100     		.2byte	0x1
 1673 013b 54       		.byte	0x54
 1674 013c 12000000 		.4byte	.LVL29
 1675 0140 14000000 		.4byte	.LVL30
 1676 0144 0100     		.2byte	0x1
 1677 0146 54       		.byte	0x54
 1678 0147 14000000 		.4byte	.LVL30
 1679 014b 1C000000 		.4byte	.LVL31
 1680 014f 0200     		.2byte	0x2
 1681 0151 30       		.byte	0x30
 1682 0152 9F       		.byte	0x9f
 1683 0153 1C000000 		.4byte	.LVL31
 1684 0157 22000000 		.4byte	.LVL32
 1685 015b 0100     		.2byte	0x1
 1686 015d 54       		.byte	0x54
 1687 015e 00000000 		.4byte	0
 1688 0162 00000000 		.4byte	0
 1689              	.LLST7:
 1690 0166 00000000 		.4byte	.LVL33
 1691 016a 0B000000 		.4byte	.LVL34-1
 1692 016e 0100     		.2byte	0x1
 1693 0170 50       		.byte	0x50
 1694 0171 0B000000 		.4byte	.LVL34-1
 1695 0175 20000000 		.4byte	.LFE12
 1696 0179 0400     		.2byte	0x4
 1697 017b F3       		.byte	0xf3
 1698 017c 01       		.uleb128 0x1
 1699 017d 50       		.byte	0x50
 1700 017e 9F       		.byte	0x9f
 1701 017f 00000000 		.4byte	0
 1702 0183 00000000 		.4byte	0
 1703              	.LLST8:
 1704 0187 06000000 		.4byte	.LVL37
 1705 018b 1C000000 		.4byte	.LVL38
 1706 018f 0100     		.2byte	0x1
 1707 0191 53       		.byte	0x53
 1708 0192 1C000000 		.4byte	.LVL38
 1709 0196 24000000 		.4byte	.LFE13
 1710 019a 0100     		.2byte	0x1
 1711 019c 50       		.byte	0x50
 1712 019d 00000000 		.4byte	0
 1713 01a1 00000000 		.4byte	0
 1714              	.LLST9:
 1715 01a5 06000000 		.4byte	.LVL39
 1716 01a9 1B000000 		.4byte	.LVL40-1
 1717 01ad 0100     		.2byte	0x1
 1718 01af 50       		.byte	0x50
 1719 01b0 00000000 		.4byte	0
 1720 01b4 00000000 		.4byte	0
 1721              	.LLST10:
 1722 01b8 00000000 		.4byte	.LVL41
 1723 01bc 3C000000 		.4byte	.LVL46
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 59


 1724 01c0 0100     		.2byte	0x1
 1725 01c2 50       		.byte	0x50
 1726 01c3 3C000000 		.4byte	.LVL46
 1727 01c7 58000000 		.4byte	.LFE15
 1728 01cb 0400     		.2byte	0x4
 1729 01cd F3       		.byte	0xf3
 1730 01ce 01       		.uleb128 0x1
 1731 01cf 50       		.byte	0x50
 1732 01d0 9F       		.byte	0x9f
 1733 01d1 00000000 		.4byte	0
 1734 01d5 00000000 		.4byte	0
 1735              	.LLST11:
 1736 01d9 22000000 		.4byte	.LVL42
 1737 01dd 28000000 		.4byte	.LVL43
 1738 01e1 0100     		.2byte	0x1
 1739 01e3 53       		.byte	0x53
 1740 01e4 34000000 		.4byte	.LVL44
 1741 01e8 3A000000 		.4byte	.LVL45
 1742 01ec 0100     		.2byte	0x1
 1743 01ee 53       		.byte	0x53
 1744 01ef 00000000 		.4byte	0
 1745 01f3 00000000 		.4byte	0
 1746              		.section	.debug_aranges,"",%progbits
 1747 0000 9C000000 		.4byte	0x9c
 1748 0004 0200     		.2byte	0x2
 1749 0006 00000000 		.4byte	.Ldebug_info0
 1750 000a 04       		.byte	0x4
 1751 000b 00       		.byte	0
 1752 000c 0000     		.2byte	0
 1753 000e 0000     		.2byte	0
 1754 0010 00000000 		.4byte	.LFB1
 1755 0014 18000000 		.4byte	.LFE1-.LFB1
 1756 0018 00000000 		.4byte	.LFB2
 1757 001c 24000000 		.4byte	.LFE2-.LFB2
 1758 0020 00000000 		.4byte	.LFB0
 1759 0024 1C000000 		.4byte	.LFE0-.LFB0
 1760 0028 00000000 		.4byte	.LFB3
 1761 002c 24000000 		.4byte	.LFE3-.LFB3
 1762 0030 00000000 		.4byte	.LFB4
 1763 0034 04000000 		.4byte	.LFE4-.LFB4
 1764 0038 00000000 		.4byte	.LFB5
 1765 003c 02000000 		.4byte	.LFE5-.LFB5
 1766 0040 00000000 		.4byte	.LFB6
 1767 0044 0C000000 		.4byte	.LFE6-.LFB6
 1768 0048 00000000 		.4byte	.LFB7
 1769 004c 14000000 		.4byte	.LFE7-.LFB7
 1770 0050 00000000 		.4byte	.LFB8
 1771 0054 0C000000 		.4byte	.LFE8-.LFB8
 1772 0058 00000000 		.4byte	.LFB9
 1773 005c 18000000 		.4byte	.LFE9-.LFB9
 1774 0060 00000000 		.4byte	.LFB10
 1775 0064 24000000 		.4byte	.LFE10-.LFB10
 1776 0068 00000000 		.4byte	.LFB11
 1777 006c 28000000 		.4byte	.LFE11-.LFB11
 1778 0070 00000000 		.4byte	.LFB12
 1779 0074 20000000 		.4byte	.LFE12-.LFB12
 1780 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 60


 1781 007c 24000000 		.4byte	.LFE13-.LFB13
 1782 0080 00000000 		.4byte	.LFB14
 1783 0084 24000000 		.4byte	.LFE14-.LFB14
 1784 0088 00000000 		.4byte	.LFB15
 1785 008c 58000000 		.4byte	.LFE15-.LFB15
 1786 0090 00000000 		.4byte	.LFB16
 1787 0094 02000000 		.4byte	.LFE16-.LFB16
 1788 0098 00000000 		.4byte	0
 1789 009c 00000000 		.4byte	0
 1790              		.section	.debug_ranges,"",%progbits
 1791              	.Ldebug_ranges0:
 1792 0000 00000000 		.4byte	.LFB1
 1793 0004 18000000 		.4byte	.LFE1
 1794 0008 00000000 		.4byte	.LFB2
 1795 000c 24000000 		.4byte	.LFE2
 1796 0010 00000000 		.4byte	.LFB0
 1797 0014 1C000000 		.4byte	.LFE0
 1798 0018 00000000 		.4byte	.LFB3
 1799 001c 24000000 		.4byte	.LFE3
 1800 0020 00000000 		.4byte	.LFB4
 1801 0024 04000000 		.4byte	.LFE4
 1802 0028 00000000 		.4byte	.LFB5
 1803 002c 02000000 		.4byte	.LFE5
 1804 0030 00000000 		.4byte	.LFB6
 1805 0034 0C000000 		.4byte	.LFE6
 1806 0038 00000000 		.4byte	.LFB7
 1807 003c 14000000 		.4byte	.LFE7
 1808 0040 00000000 		.4byte	.LFB8
 1809 0044 0C000000 		.4byte	.LFE8
 1810 0048 00000000 		.4byte	.LFB9
 1811 004c 18000000 		.4byte	.LFE9
 1812 0050 00000000 		.4byte	.LFB10
 1813 0054 24000000 		.4byte	.LFE10
 1814 0058 00000000 		.4byte	.LFB11
 1815 005c 28000000 		.4byte	.LFE11
 1816 0060 00000000 		.4byte	.LFB12
 1817 0064 20000000 		.4byte	.LFE12
 1818 0068 00000000 		.4byte	.LFB13
 1819 006c 24000000 		.4byte	.LFE13
 1820 0070 00000000 		.4byte	.LFB14
 1821 0074 24000000 		.4byte	.LFE14
 1822 0078 00000000 		.4byte	.LFB15
 1823 007c 58000000 		.4byte	.LFE15
 1824 0080 00000000 		.4byte	.LFB16
 1825 0084 02000000 		.4byte	.LFE16
 1826 0088 00000000 		.4byte	0
 1827 008c 00000000 		.4byte	0
 1828              		.section	.debug_line,"",%progbits
 1829              	.Ldebug_line0:
 1830 0000 F0010000 		.section	.debug_str,"MS",%progbits,1
 1830      02006300 
 1830      00000201 
 1830      FB0E0D00 
 1830      01010101 
 1831              	.LASF6:
 1832 0000 6C6F6E67 		.ascii	"long long int\000"
 1832      206C6F6E 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 61


 1832      6720696E 
 1832      7400
 1833              	.LASF52:
 1834 000e 55415254 		.ascii	"UART_1_Init\000"
 1834      5F315F49 
 1834      6E697400 
 1835              	.LASF19:
 1836 001a 55415254 		.ascii	"UART_1_Start\000"
 1836      5F315F53 
 1836      74617274 
 1836      00
 1837              	.LASF22:
 1838 0027 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 1838      5F315F57 
 1838      72697465 
 1838      436F6E74 
 1838      726F6C52 
 1839              	.LASF54:
 1840 0043 55415254 		.ascii	"UART_1_initVar\000"
 1840      5F315F69 
 1840      6E697456 
 1840      617200
 1841              	.LASF41:
 1842 0052 746D7053 		.ascii	"tmpStat\000"
 1842      74617400 
 1843              	.LASF23:
 1844 005a 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 1844      5F315F53 
 1844      65745478 
 1844      496E7465 
 1844      72727570 
 1845              	.LASF46:
 1846 0074 55415254 		.ascii	"UART_1_IntClock_Start\000"
 1846      5F315F49 
 1846      6E74436C 
 1846      6F636B5F 
 1846      53746172 
 1847              	.LASF3:
 1848 008a 73686F72 		.ascii	"short unsigned int\000"
 1848      7420756E 
 1848      7369676E 
 1848      65642069 
 1848      6E7400
 1849              	.LASF8:
 1850 009d 756E7369 		.ascii	"unsigned int\000"
 1850      676E6564 
 1850      20696E74 
 1850      00
 1851              	.LASF43:
 1852 00aa 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 1852      5F315F53 
 1852      65745478 
 1852      41646472 
 1852      6573734D 
 1853              	.LASF29:
 1854 00c2 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 1854      5F315F52 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 62


 1854      65616454 
 1854      78537461 
 1854      74757300 
 1855              	.LASF32:
 1856 00d6 73747269 		.ascii	"string\000"
 1856      6E6700
 1857              	.LASF11:
 1858 00dd 666C6F61 		.ascii	"float\000"
 1858      7400
 1859              	.LASF7:
 1860 00e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1860      206C6F6E 
 1860      6720756E 
 1860      7369676E 
 1860      65642069 
 1861              	.LASF44:
 1862 00fa 61646472 		.ascii	"addressMode\000"
 1862      6573734D 
 1862      6F646500 
 1863              	.LASF49:
 1864 0106 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1864      43313120 
 1864      352E342E 
 1864      31203230 
 1864      31363036 
 1865 0139 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1865      20726576 
 1865      6973696F 
 1865      6E203233 
 1865      37373135 
 1866 016c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1866      66756E63 
 1866      74696F6E 
 1866      2D736563 
 1866      74696F6E 
 1867              	.LASF15:
 1868 0194 72656738 		.ascii	"reg8\000"
 1868      00
 1869              	.LASF28:
 1870 0199 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 1870      5F315F52 
 1870      65616443 
 1870      6F6E7472 
 1870      6F6C5265 
 1871              	.LASF20:
 1872 01b4 55415254 		.ascii	"UART_1_Stop\000"
 1872      5F315F53 
 1872      746F7000 
 1873              	.LASF5:
 1874 01c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1874      20756E73 
 1874      69676E65 
 1874      6420696E 
 1874      7400
 1875              	.LASF9:
 1876 01d2 75696E74 		.ascii	"uint8\000"
 1876      3800
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 63


 1877              	.LASF24:
 1878 01d8 636F6E74 		.ascii	"control\000"
 1878      726F6C00 
 1879              	.LASF35:
 1880 01e0 62797465 		.ascii	"byteCount\000"
 1880      436F756E 
 1880      7400
 1881              	.LASF21:
 1882 01ea 656E6162 		.ascii	"enableInterrupts\000"
 1882      6C65496E 
 1882      74657272 
 1882      75707473 
 1882      00
 1883              	.LASF1:
 1884 01fb 756E7369 		.ascii	"unsigned char\000"
 1884      676E6564 
 1884      20636861 
 1884      7200
 1885              	.LASF12:
 1886 0209 646F7562 		.ascii	"double\000"
 1886      6C6500
 1887              	.LASF25:
 1888 0210 696E7453 		.ascii	"intSrc\000"
 1888      726300
 1889              	.LASF2:
 1890 0217 73686F72 		.ascii	"short int\000"
 1890      7420696E 
 1890      7400
 1891              	.LASF10:
 1892 0221 75696E74 		.ascii	"uint16\000"
 1892      313600
 1893              	.LASF45:
 1894 0228 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1894      74657243 
 1894      72697469 
 1894      63616C53 
 1894      65637469 
 1895              	.LASF30:
 1896 023f 55415254 		.ascii	"UART_1_PutChar\000"
 1896      5F315F50 
 1896      75744368 
 1896      617200
 1897              	.LASF50:
 1898 024e 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 1898      72617465 
 1898      645F536F 
 1898      75726365 
 1898      5C50536F 
 1899              	.LASF53:
 1900 026e 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 1900      5F315F47 
 1900      65745478 
 1900      42756666 
 1900      65725369 
 1901              	.LASF47:
 1902 0285 43794578 		.ascii	"CyExitCriticalSection\000"
 1902      69744372 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 64


 1902      69746963 
 1902      616C5365 
 1902      6374696F 
 1903              	.LASF36:
 1904 029b 55415254 		.ascii	"UART_1_PutCRLF\000"
 1904      5F315F50 
 1904      75744352 
 1904      4C4600
 1905              	.LASF33:
 1906 02aa 62756649 		.ascii	"bufIndex\000"
 1906      6E646578 
 1906      00
 1907              	.LASF39:
 1908 02b3 55415254 		.ascii	"UART_1_SendBreak\000"
 1908      5F315F53 
 1908      656E6442 
 1908      7265616B 
 1908      00
 1909              	.LASF34:
 1910 02c4 55415254 		.ascii	"UART_1_PutArray\000"
 1910      5F315F50 
 1910      75744172 
 1910      72617900 
 1911              	.LASF51:
 1912 02d4 433A5C55 		.ascii	"C:\\Users\\tmj32\\Desktop\\343Final\\PSOC_C_AlarmCl"
 1912      73657273 
 1912      5C746D6A 
 1912      33325C44 
 1912      65736B74 
 1913 0302 6F636B55 		.ascii	"ockUsingInterrupts\\Design01.cydsn\000"
 1913      73696E67 
 1913      496E7465 
 1913      72727570 
 1913      74735C44 
 1914              	.LASF17:
 1915 0324 73697A65 		.ascii	"sizetype\000"
 1915      74797065 
 1915      00
 1916              	.LASF13:
 1917 032d 63686172 		.ascii	"char8\000"
 1917      3800
 1918              	.LASF48:
 1919 0333 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 1919      5F315F49 
 1919      6E74436C 
 1919      6F636B5F 
 1919      53746F70 
 1920              	.LASF27:
 1921 0348 74784461 		.ascii	"txDataByte\000"
 1921      74614279 
 1921      746500
 1922              	.LASF14:
 1923 0353 63686172 		.ascii	"char\000"
 1923      00
 1924              	.LASF40:
 1925 0358 7265744D 		.ascii	"retMode\000"
 1925      6F646500 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccngzFSm.s 			page 65


 1926              	.LASF26:
 1927 0360 55415254 		.ascii	"UART_1_WriteTxData\000"
 1927      5F315F57 
 1927      72697465 
 1927      54784461 
 1927      746100
 1928              	.LASF38:
 1929 0373 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 1929      5F315F43 
 1929      6C656172 
 1929      54784275 
 1929      66666572 
 1930              	.LASF4:
 1931 0388 6C6F6E67 		.ascii	"long int\000"
 1931      20696E74 
 1931      00
 1932              	.LASF42:
 1933 0391 74785065 		.ascii	"txPeriod\000"
 1933      72696F64 
 1933      00
 1934              	.LASF18:
 1935 039a 55415254 		.ascii	"UART_1_Enable\000"
 1935      5F315F45 
 1935      6E61626C 
 1935      6500
 1936              	.LASF16:
 1937 03a8 6C6F6E67 		.ascii	"long double\000"
 1937      20646F75 
 1937      626C6500 
 1938              	.LASF0:
 1939 03b4 7369676E 		.ascii	"signed char\000"
 1939      65642063 
 1939      68617200 
 1940              	.LASF31:
 1941 03c0 55415254 		.ascii	"UART_1_PutString\000"
 1941      5F315F50 
 1941      75745374 
 1941      72696E67 
 1941      00
 1942              	.LASF37:
 1943 03d1 73697A65 		.ascii	"size\000"
 1943      00
 1944              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
